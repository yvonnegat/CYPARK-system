[
    {
        "id": "serial_in",
        "type": "serial in",
        "z": "flow7",
        "name": "Serial In (COM9)",
        "serial": "serial-config",
        "x": 100,
        "y": 100,
        "wires": [["function_process_serial", "debug_serial"]]
    },
    {
        "id": "function_process_serial",
        "type": "function",
        "z": "flow7",
        "name": "Process Serial Data",
        "func": "let payload = JSON.parse(msg.payload);\nlet distance1 = payload.distance1;\nlet distance2 = payload.distance2;\nlet threshold = 100; // Example threshold\nmsg.payload = {\n    parking1: (distance1 < threshold) ? 'occupied' : 'vacant',\n    parking2: (distance2 < threshold) ? 'occupied' : 'vacant'\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 100,
        "wires": [["status_store", "websocket_out"]]
    },
    {
        "id": "status_store",
        "type": "change",
        "z": "flow7",
        "name": "Store Status",
        "rules": [
            {
                "t": "set",
                "p": "parkingStatus",
                "pt": "flow",
                "to": "msg.payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 100,
        "wires": []
    },
    {
        "id": "debug_serial",
        "type": "debug",
        "z": "flow7",
        "name": "Debug Serial",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "targetType": "msg",
        "x": 300,
        "y": 140,
        "wires": []
    },
    {
        "id": "http_in_status",
        "type": "http in",
        "z": "flow7",
        "name": "HTTP In (Get Parking Status)",
        "url": "/parking-status",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 200,
        "wires": [["status_response"]]
    },
    {
        "id": "status_response",
        "type": "function",
        "z": "flow7",
        "name": "Send Status",
        "func": "msg.payload = flow.get('parkingStatus');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [["http_response_status"]]
    },
    {
        "id": "http_response_status",
        "type": "http response",
        "z": "flow7",
        "name": "HTTP Response",
        "statusCode": "",
        "headers": {},
        "x": 500,
        "y": 200,
        "wires": []
    },
    {
        "id": "websocket_out",
        "type": "websocket out",
        "z": "flow7",
        "name": "",
        "server": "",
        "client": "",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "serial-config",
        "type": "serial-port",
        "z": "",
        "serialport": "COM9",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": "10000"
    }
]
